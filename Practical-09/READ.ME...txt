Class, Object, Constructor, Static Data Members, friend function in C++: 

9.1 Task: Class and Object in C++
a. WAP to assign and print the roll number, phone number and address of two students having names "Sam" and "John" respectively by creating two objects of the class 'Student'.
b. WAP which would contain array of objects [many objects], of a class Student. Student [Name, Age, Year, section, marks], the section would be A,B,C and D. Your program would be able to return the total marks of students in the college.
Hint [Make a Matrix or Tabular diagram to understand the problem], all the rows will differ each other by different objects of Student class [Student s1,s2,s3,s4].

9.2 Task: Constructor in C++
WAP to create a class to print the area of a square and a rectangle. The class has two functions with the same name but different number of parameters. The function for printing the area of rectangle has two parameters which are its length and breadth respectively while the other function for printing the area of square has one parameter which is the side of the square. Use multiple constructors to for the initialization.

9.3 Task: Static Data Members in C++
WAP to count the total number of calls for a member function from more than one objects. [Lets say, from 3 such Objects]

9.4 Task: Friend Function in C++
WAP in which you create a Student class having basic information for each student, like name, age and marks. By using friend function add marks of all the students [lets say 3 objects] and print it.

9.5 Task: Structure in C++
WAP to create a College class and Student Structure in C++ in one program. By providing such suitable examples write at least 5 differences between class and struct code your have written above. 
Hint [Access Specifiers, Heap and Stack, large and small memory, etc.]

9.6 Task: Extra Questions:
WAP which would perform these tasks of your data:
a. Come to next line
b. set minimum field width
c. fill string with (*) after setw(15) function
    **********1234
by using endl, setw, and setfill [Manipulators in C++] 